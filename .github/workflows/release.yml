name: Build/Release

on:
    push:
        tags:
            - '*'

jobs:
    release-pkg:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      platform: linux

        steps:
            - id: get_version
              uses: battila7/get-version-action@v2
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: 16
                  cache: 'npm'
            - name: install dependencies
              run: npm install
            - name: build-pkg ${{ matrix.platform }}
              run: npm run pkg:build
            - name: pack-pkg ${{ matrix.platform }}
              run: tar -zcf TON-Stratum-Miner-${{ steps.get_version.outputs.version-without-v }}-linux-headless.tar.gz TON-Stratum-Miner
            - run: mkdir TON_Stratum_Miner_HiveOS
            - run: mkdir TON_Stratum_Miner_HiveOS/bin
            - run: cp ./bin/pow-miner-opencl-ubuntu-18 ./bin/pow-miner-cuda-ubuntu-18 ./TON_Stratum_Miner_HiveOS/bin
            - run: cp -r ./config/ ./TON_Stratum_Miner_HiveOS
            - run: cp -r ./data/ ./TON_Stratum_Miner_HiveOS
            - run: cp ./hiveos/* ./TON_Stratum_Miner_HiveOS
            - run: cp ./TON-Stratum-Miner/TON-Stratum-Miner ./TON_Stratum_Miner_HiveOS
            - run: chmod +x ./TON_Stratum_Miner_HiveOS/h-run.sh
            - run: tar -zcf TON_Stratum_Miner_HiveOS-${{ steps.get_version.outputs.version-without-v }}.tar.gz TON_Stratum_Miner_HiveOS
            - uses: meeDamian/github-release@2.0
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  name: ${{ steps.get_version.outputs.version-without-v }}
                  draft: true
                  gzip: false
                  files: TON-Stratum-Miner-${{ steps.get_version.outputs.version-without-v }}-linux-headless.tar.gz TON_Stratum_Miner_HiveOS-${{ steps.get_version.outputs.version-without-v }}.tar.gz

    release:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                include:
                    - os: windows-latest
                      platform: windows
                    - os: macos-latest
                      platform: mac
                    - os: ubuntu-latest
                      platform: linux

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: 16
                  cache: 'npm'
            - name: install dependencies
              run: npm install
            - name: release ${{ matrix.platform }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: npm run app:release -- --${{ matrix.platform }}
